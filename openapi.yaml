openapi: 3.0.0
info:
  description: |
    This is a sample Petstore server.  You can find
    out more about Swagger at
    [http://swagger.io](http://swagger.io) or on
    [irc.freenode.net, #swagger](http://swagger.io/irc/).
  version: "1.0.0"
  title: Swagger Alumnostore
  termsOfService: 'http://swagger.io/terms/'
  contact:
    email: apiteam@swagger.io
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
servers:
# Added by API Auto Mocking Plugin
# Added by API Auto Mocking Plugin
# Added by API Auto Mocking Plugin
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/juanVega/Alumnos/1.0.0

  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/airyamany21/AlumnosAPI-Ver2/1.0.0

  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/airyamany21/apistudent2/1.0.0

  - url: 'https://petstore.swagger.io/v2
'
tags:
  - name: Alumno
    description: Everything about your Alumno
    externalDocs:
      description: Find out more
      url: 'http://swagger.io'
  - name: store
    description: Access to Alumnostore orders
  - name: user
    description: Operations about user
    externalDocs:
      description: Find out more about our store
      url: 'http://swagger.io'
paths:
  /Estudiantes:
    post:
      tags:
        - Estudiantes
      summary: Add a new Alumno to the Estudiantes
      operationId: addAlumno
      responses:
        '405':
          description: Invalid input
      security:
        - Alumnostore_auth:
            - 'write:Alumno'
            - 'read:Alumno'
      requestBody:
        $ref: '#/components/requestBodies/Alumno'
    put:
      tags:
        - Estudiantes
      summary: Updates a Alumno in the store with form data
      operationId: updateAlumnosById
      parameters:
        - name: AlumnoId
          in: path
          description: ID of Alumno that needs to be updated
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '405':
          description: Invalid input
      security:
        - petstore_auth:
            - 'write:Alumno'
            - 'read:Alumno'
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                name:
                  description: Updated name of the Alumno
                  type: string
                status:
                  description: Updated status of the Alumno
                  type: string
    get:
      tags:
        - Estudiantes
      summary: Find Alumno 
      description: Returns a single Alumno
      operationId: findAll
      parameters:
        - name: AlumnoMatricula
          in: path
          description: ID of pet to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Alumno'
            application/xml:
              schema:
                $ref: '#/components/schemas/Alumno'
        '400':
          description: Invalid ID supplied
        '404':
          description: Alumno not found
      security:
        - api_key: []
  '/Estudiantes/{AlumnoMatricula}':
    get:
      tags:
        - Estudiantes
      summary: Find Alumno by Matricula
      description: Returns a single Alumno
      operationId: getAlumnoByMatricula
      parameters:
        - name: AlumnoMatricula
          in: path
          description: ID of pet to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Alumno'
            application/xml:
              schema:
                $ref: '#/components/schemas/Alumno'
        '400':
          description: Invalid ID supplied
        '404':
          description: Alumno not found
      security:
        - api_key: []
  '/Estudiantes/{AlumnoId}':
    get:
      tags:
        - Estudiantes
      summary: Find Alumno by ID
      description: Returns a single Alumno
      operationId: getAlumnoById
      parameters:
        - name: AlumnoId
          in: path
          description: ID of pet to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Alumno'
            application/xml:
              schema:
                $ref: '#/components/schemas/Alumno'
        '400':
          description: Invalid ID supplied
        '404':
          description: Alumno not found
      security:
        - api_key: []
    patch:
      tags:
        - Estudiantes
      summary: Updates a Alumno in the store with form data
      operationId: updateAlumnoWithForm
      parameters:
        - name: AlumnoId
          in: path
          description: ID of Alumno that needs to be updated
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '405':
          description: Invalid input
      security:
        - petstore_auth:
            - 'write:Alumno'
            - 'read:Alumno'
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                name:
                  description: Updated name of the Alumno
                  type: string
                status:
                  description: Updated status of the Alumno
                  type: string
    delete:
      tags:
        - Estudiantes
      summary: Deletes a Alumno
      operationId: deleteAlumno
      parameters:
        - name: api_key
          in: header
          required: false
          schema:
            type: string
        - name: AlumnoId
          in: path
          description: Alumno id to delete
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: Invalid ID supplied
        '404':
          description: Alumno not found
      security:
        - petstore_auth:
            - 'write:Alumnos'
            - 'read:Alumnos'
  '/Alumno/{AlumnoId}/uploadImage':
    post:
      tags:
        - Estudiantes
      summary: uploads an image
      operationId: uploadFile
      parameters:
        - name: AlumnoId
          in: path
          description: ID of Alumno to update
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
      security:
        - Alumnostore_auth:
            - 'write:Alumnos'
            - 'read:Alumnos'
      requestBody:
        content:
          application/octet-stream:
            schema:
              type: string
              format: binary
  
  
externalDocs:
  description: Find out more about Swagger
  url: 'http://swagger.io'
components:
  schemas:
    Order:
      type: object
      properties:
        id:
          type: integer
          format: int64
        petId:
          type: integer
          format: int64
        quantity:
          type: integer
          format: int32
        shipDate:
          type: string
          format: date-time
        status:
          type: string
          description: Order Status
          enum:
            - placed
            - approved
            - delivered
        complete:
          type: boolean
          default: false
      xml:
        name: Order
    Category:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
      xml:
        name: Category
    User:
      type: object
      properties:
        id:
          type: integer
          format: int64
        username:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
        password:
          type: string
        phone:
          type: string
        userStatus:
          type: integer
          format: int32
          description: User Status
      xml:
        name: User
    Tag:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
      xml:
        name: Tag
    Alumno:
      type: object
      required:
        - name
        - photoUrls
      properties:
        id:
          type: integer
          format: int64
        category:
          $ref: '#/components/schemas/Category'
        name:
          type: string
          example: doggie
        photoUrls:
          type: array
          xml:
            name: photoUrl
            wrapped: true
          items:
            type: string
        tags:
          type: array
          xml:
            name: tag
            wrapped: true
          items:
            $ref: '#/components/schemas/Tag'
        status:
          type: string
          description: pet status in the store
          enum:
            - available
            - pending
            - sold
      xml:
        name: Alumno
    ApiResponse:
      type: object
      properties:
        code:
          type: integer
          format: int32
        type:
          type: string
        message:
          type: string
  requestBodies:
    Alumno:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Alumno'
        application/xml:
          schema:
            $ref: '#/components/schemas/Alumno'
      description: Alumno object that needs to be added to the store
      required: true
    UserArray:
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/User'
      description: List of user object
      required: true
  securitySchemes:
    Alumnostore_auth:
      type: oauth2
      flows:
        implicit:
          authorizationUrl: 'http://petstore.swagger.io/oauth/dialog'
          scopes:
            'write:Alumnos': modify pets in your account
            'read:Alumnos': read your Alumnos
    api_key:
      type: apiKey
      name: api_key
      in: header